# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: '3.4'

services:

  mvcwebapp:
    image: mvcwebapp
    build:
      context: .
      dockerfile: mvc-web-app/Dockerfile
    ports:
      - 8080:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DATABASE_CONNECTION=Server=sqldb;Database=Blogging;User=sa;Password=Password123;
    depends_on:
        - sqldb


  webapi:
    image: mywebapi
    build:
      context: .
      dockerfile: mywebapi/Dockerfile
    ports:
      - 8081:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DATABASE_CONNECTION=Server=sqldb;Database=Blogging;User=sa;Password=Password123;
    depends_on:
        - sqldb


  sqldb:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Password123"
      MSSQL_PID: developer
    ports: 
      - 1499:1433
    image: mcr.microsoft.com/mssql/server:2019-latest
    volumes: 
      - .\.sqldatafiles\backups:/var/opt/mssql/backups
      - .\.sqldatafiles\data:/var/opt/mssql/data
      - sql-data-secrets:/var/opt/mssql/secrets 

#  WORDPRESS
  mysqldb:
    image: mysql:5.7
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress

  wordpress:
    depends_on:
      - mysqldb
    image: wordpress:latest
    ports:
      - "8003:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: mysqldb:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
volumes:
  sql-data-secrets:
  db_data: {}